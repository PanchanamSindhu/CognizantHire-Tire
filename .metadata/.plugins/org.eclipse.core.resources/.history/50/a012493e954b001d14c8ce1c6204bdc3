package com.digitalbook.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.digitalbook.entity.Book;
import com.digitalbook.entity.BookAuthor;
import com.digitalbook.entity.ERole;
import com.digitalbook.entity.User;
import com.digitalbook.service.BookService;
import com.digitalbook.service.UserService;
/**
 * 
 * @author sindhu This is BookController which run methods for book api
 */

@RestController
@RequestMapping("/digitalbooks")
public class BookController {
	
	@Autowired
	BookService bookService;
	
	@Autowired
	UserService userService;
	
	@PostMapping("/author/{authorId}/books")
	public ResponseEntity<Integer> saveBook(@PathVariable("authorId") int authorId, @RequestBody Book book) {
		ResponseEntity<Integer> response;
		BookAuthor bookAuthor = new BookAuthor();
		
		Book book1 = bookService.getBook(book.getTitle());
		if (book1 == null) {
			int bookId = 0;
			User user = userService.getUser(authorId, ERole.ROLE_AUTHOR);
			book.setAuthorName(user.getName());
			book.setAuthorUserName(user.getUserName());
			book = bookService.saveBook(book);
			bookId = book.getId();
			response = new ResponseEntity<>(bookId, HttpStatus.CREATED);
			bookAuthor.setBook(book);
			bookAuthor.setEmailId(user.getEmailId());
		} else {
			response = new ResponseEntity<>(HttpStatus.CONFLICT);
		}
		return response;
	}

}
